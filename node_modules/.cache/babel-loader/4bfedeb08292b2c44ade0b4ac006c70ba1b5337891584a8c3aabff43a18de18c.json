{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Escritorio\\\\react\\\\rickandmorty\\\\src\\\\components\\\\Characters\\\\Characters.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport Navegation from '../Navegation/Navegation';\nimport Filters from \"../FIlters/Filters\";\nimport SectionCards from \"../SectionCards/SectionCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Characters() {\n  _s();\n  let [datos, setDatos] = useState([]);\n  let [infoCompleta, setInfoCompleta] = useState([]);\n  const mostrarValor = event => {\n    // se fija si esta o no checked,tildado\n    if (event.target.checked) {\n      let datoFiltro = event.target.value;\n      if (datoFiltro === \"Alive\" || datoFiltro === \"Dead\") {\n        let resultado = datos.filter(ch => ch.status === datoFiltro); //nuevo array con solo los elementos que cumplen la condicion\n        setDatos(resultado);\n      }\n      if (datoFiltro === \"Female\" || datoFiltro === \"Male\") {\n        let resultado = datos.filter(ch => ch.gender === datoFiltro);\n        setDatos(resultado);\n      }\n      if (datoFiltro === \"unknown\") {\n        let resultado = datos.filter(ch => ch.origin.name === datoFiltro);\n        setDatos(resultado);\n      }\n    } else {\n      setDatos(infoCompleta);\n    }\n  };\n  const traerInfo = async () => {\n    let info = await fetch(\"https://rickandmortyapi.com/api/character\").then(respuesta => respuesta.json()).catch(error => console.log(\"HAY UN ERROR!!\" + error));\n    return info;\n  };\n\n  //saco la funcion por fuera para que lo pueda utilizar en mi funcion del evento\n  const mostarInfo = async () => {\n    let dato = await traerInfo();\n    let infoPersonajes = dato.results;\n    console.log(infoPersonajes);\n    setDatos(infoPersonajes);\n    setInfoCompleta(infoPersonajes);\n  };\n  //Se ejecuta cuando se renderiza la pagina\n  useEffect(() => {\n    mostarInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navegation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"bg-success d-flex p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        nombreFiltro: \"Character Alive\",\n        datoFiltro: \"Alive\",\n        muestraValor: mostrarValor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        nombreFiltro: \"Character Dead\",\n        datoFiltro: \"Dead\",\n        muestraValor: mostrarValor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        nombreFiltro: \"Female\",\n        datoFiltro: \"Female\",\n        muestraValor: mostrarValor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        nombreFiltro: \"Male\",\n        datoFiltro: \"Male\",\n        muestraValor: mostrarValor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        nombreFiltro: \"Origin Unknown\",\n        datoFiltro: \"unknown\",\n        muestraValor: mostrarValor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SectionCards, {\n      datos: datos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Characters, \"U3WyDvxQKLr7v3KBLLaCGhF0gi0=\");\n_c = Characters;\nvar _c;\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["useEffect","useState","Fragment","Navegation","Filters","SectionCards","Characters","datos","setDatos","infoCompleta","setInfoCompleta","mostrarValor","event","target","checked","datoFiltro","value","resultado","filter","ch","status","gender","origin","name","traerInfo","info","fetch","then","respuesta","json","catch","error","console","log","mostarInfo","dato","infoPersonajes","results"],"sources":["C:/Users/Admin/OneDrive/Escritorio/react/rickandmorty/src/components/Characters/Characters.js"],"sourcesContent":["import{useEffect, useState} from 'react';\nimport { Fragment } from 'react';\n\nimport Navegation from '../Navegation/Navegation';\nimport Filters from \"../FIlters/Filters\";\nimport SectionCards from \"../SectionCards/SectionCards\";\n\n\nexport default function Characters() {\n    let [datos,setDatos]=useState([]);\n    let [infoCompleta,setInfoCompleta]=useState([]);\n \n    const mostrarValor =(event)=>{\n\n        // se fija si esta o no checked,tildado\n        if(event.target.checked){\n                let datoFiltro=event.target.value;\n                if(datoFiltro === \"Alive\" || datoFiltro === \"Dead\"){\n                let resultado= datos.filter((ch)=> ch.status === datoFiltro)//nuevo array con solo los elementos que cumplen la condicion\n                    setDatos(resultado)\n                }\n                if(datoFiltro === \"Female\" || datoFiltro === \"Male\"){\n                    let resultado= datos.filter((ch)=> ch.gender === datoFiltro)\n                    setDatos(resultado)\n                }\n                if(datoFiltro === \"unknown\"){\n                    let resultado= datos.filter((ch)=> ch.origin.name === datoFiltro)\n                    setDatos(resultado)\n                } \n                \n         }else{\n            setDatos(infoCompleta)\n         }\n    }\n\n    const traerInfo=async()=>{\n \n        let info= await fetch(\"https://rickandmortyapi.com/api/character\")\n                        .then(respuesta => respuesta.json())\n                        .catch(error => console.log(\"HAY UN ERROR!!\" +error))\n        return info\n        \n    }\n\n      //saco la funcion por fuera para que lo pueda utilizar en mi funcion del evento\n    const mostarInfo =async ()=>{\n        let dato= await traerInfo()\n        let infoPersonajes= dato.results\n        console.log(infoPersonajes)\n        setDatos(infoPersonajes)\n        setInfoCompleta(infoPersonajes)\n    }\n    //Se ejecuta cuando se renderiza la pagina\n     useEffect(()=>{\n        mostarInfo() \n     },[])\n\n\n    return(\n        <Fragment>\n            <Navegation />\n            <section className='bg-success d-flex p-2'>\n                <h2>Filters</h2>\n                <Filters nombreFiltro=\"Character Alive\" datoFiltro=\"Alive\" muestraValor={mostrarValor}/> \n                <Filters nombreFiltro=\"Character Dead\" datoFiltro=\"Dead\" muestraValor={mostrarValor}/> \n                <Filters nombreFiltro=\"Female\" datoFiltro=\"Female\" muestraValor={mostrarValor}/> \n                <Filters nombreFiltro=\"Male\" datoFiltro=\"Male\" muestraValor={mostrarValor}/> \n                <Filters nombreFiltro=\"Origin Unknown\" datoFiltro=\"unknown\" muestraValor={mostrarValor}/> \n            </section>\n                          \n            <SectionCards datos={datos} />\n        </Fragment>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}